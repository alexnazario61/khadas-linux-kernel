#!/bin/sh

## hyphop ##

#= make kernel wrapper

#/ USAGE $0 [ARGS]
#/ args:
#/ menuconfig
#/ dtbs
#/ -jN
#/ savedefconfig
#/ Image
#/ help
#/ ...

set -e 

D=$(dirname $0)
N=$(basename $0)
DR=$(realpath $D)

#export PATH=$(realpath $D/../../fenix/build/toolchains/gcc-linaro-aarch64-linux-gnu/bin):$PATH
export PATH=/mnt/temp/khadas/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu/bin:$PATH

#export PATH=$(realpath $D/../../gcc-x86_64_aarch64-linux-gnu/bin):$PATH

export ARCH=arm64
export CROSS_COMPILE=aarch64-linux-gnu-
export CROSS_COMPILE=aarch64-none-linux-gnu-

#linux-5.3-rc4.tar.gz

#    ../../../linux-amlogic /tmp/linux-* \
for DIR in \
     /tmp/linux-* \
; do
    [ -d "$DIR" ] && break
done

[ -d "$DIR" ] || {
    echo "[e] source dir not found : $DIR">&2
    exit 1
}

CMD(){
    echo "[#] $@">&2
    "$@"
}

# cross gcc test
CMD ${CROSS_COMPILE}gcc --version  || {
    echo "[e] cross gcc failed">&2
    exit 1
}

DEF_CONFIG=kvims_defconfig

#./,make_kernel_vims ../../../../kvims_light_defconfig
[ -f "$DIR/.config" ] || {
    N=$(basename $DIR);
    echo "[i] config $N <= $DEF_CONFIG">&2
    T2=$DIR/arch/$ARCH/configs/$DEF_CONFIG
#    CMD cp $DR/../configs/$N/defconfig $T2 || {
	CMD cp $DR/../configs/linux-mainline/defconfig $T2
#    }



    C=meson-gxm-khadas-vim2.dts
#    E=$DIR/arch/$ARCH/boot/dts/amlogic/$C
#    diff $DR/../configs/$N/$C $E
#    CMD mv $E $E.org
#    CMD cp $DR/../configs/$N/$C $E


    CMD make -C "$DIR" $DEF_CONFIG
#    CMD make -C "$DIR" menuconfig

#    grep DRM "$DIR/.config" | grep -v \#
#    exit 0
}



ALL=
case "$1" in
    -n*)
    echo "[i] noop mode">&2
    exit 0
    ;;
    -a*)
    echo "[i] build all">&2
    ALL=1
    shift
    ;;
esac

ARGS="$@"

[ "$ARGS" ] || {
    ARGS="-j$(nproc)"
}

CMD make -C "$DIR" $ARGS

# post

[ "$NOPOST" ] && exit 0

T=/tmp/$N

[ -d /tmp/modules ] || \
    mkdir /tmp/modules

ln -sf /tmp/modules $T

#cp $DIR/defconfig $T/defconfig

#[ -f $T/config.gz ] && \
#CMD mv $T/config.gz $T/config.gz.old

CMD gzip -c $DIR/.config > $T/config.gz
CMD cp $DIR/arch/arm64/boot/dts/amlogic/*vim*.dtb $T
CMD cp $DIR/arch/arm64/boot/dts/rockchip/*edge*.dtb $T

CMD cp $DIR/arch/arm64/boot/Image $T

pigz -9c $T/Image > $T/Image.gz
lzma -T4 -e -9 --block-size=3M -c $T/Image > $T/Image.lzma

KERNEL_ADDR=0x01080000
KERNEL_ADDR=0x0f080000

CMD mkimage -A arm64 \
    -O linux -C gzip -T kernel -a $KERNEL_ADDR -e $KERNEL_ADDR \
    -n kernel -d "$T/Image.gz" "$T/uImage.gzip"

CMD mkimage -A arm64 \
    -O linux -C lzma -T kernel -a $KERNEL_ADDR -e $KERNEL_ADDR \
    -n kernel -d "$T/Image.lzma" "$T/uImage.lzma"

[ "$ALL" ] && {
    ${0}_modules
}


cd $T

DTBS=vims.dtb.tar.gz
[ -f "$DTBS" ] && rm $DTBS
tar -czf $DTBS *.dtb

## OK BYBY
